#############
# HOW TO USE:
#############
# 3-node Cassandra cluster for development (takes longer to start)
#
# ------------------------------------------------------------------------------
# $ docker-compose -p mapleapps_backend -f dev.docker-compose.yml up --watch  #
# ------------------------------------------------------------------------------

services:
  cassandra1:
    image: cassandra:4.1
    container_name: mapleapps_cassandra_node1
    restart: unless-stopped
    volumes:
      - cassandra_node1_data:/var/lib/cassandra
    ports:
      - "9042:9042"
    environment:
      - CASSANDRA_SEEDS=cassandra1
      - CASSANDRA_CLUSTER_NAME=mapleapps_cluster
      - CASSANDRA_DC=datacenter1
      - CASSANDRA_RACK=rack1
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
      - CASSANDRA_NUM_TOKENS=256
    healthcheck:
      test: ["CMD-SHELL", "cqlsh -e 'describe keyspaces'"]
      interval: 30s
      timeout: 10s
      retries: 15
      start_period: 180s # Give first node 3 minutes

  cassandra2:
    image: cassandra:4.1
    container_name: mapleapps_cassandra_node2
    restart: unless-stopped
    volumes:
      - cassandra_node2_data:/var/lib/cassandra
    environment:
      - CASSANDRA_SEEDS=cassandra1
      - CASSANDRA_CLUSTER_NAME=mapleapps_cluster
      - CASSANDRA_DC=datacenter1
      - CASSANDRA_RACK=rack1
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
      - CASSANDRA_NUM_TOKENS=256
    depends_on:
      cassandra1:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "cqlsh -e 'describe keyspaces'"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 120s

  cassandra3:
    image: cassandra:4.1
    container_name: mapleapps_cassandra_node3
    restart: unless-stopped
    volumes:
      - cassandra_node3_data:/var/lib/cassandra
    environment:
      - CASSANDRA_SEEDS=cassandra1
      - CASSANDRA_CLUSTER_NAME=mapleapps_cluster
      - CASSANDRA_DC=datacenter1
      - CASSANDRA_RACK=rack1
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
      - CASSANDRA_NUM_TOKENS=256
    depends_on:
      cassandra2:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "cqlsh -e 'describe keyspaces'"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 120s

  cache:
    container_name: mapleapps_cache
    image: redis:alpine
    command: "redis-server --save 60 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81 --protected-mode yes"
    ports:
      - 6379:6379
    stdin_open: true
    restart: unless-stopped
    volumes:
      - "./data/redis:/data"
    healthcheck:
      test:
        ["CMD", "redis-cli", "-a", "eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Wait for cluster to be fully ready
  wait-for-cluster:
    image: cassandra:4.1
    depends_on:
      cassandra1:
        condition: service_healthy
      cassandra2:
        condition: service_healthy
      cassandra3:
        condition: service_healthy
      cache:
        condition: service_healthy
    command:
      [
        "bash",
        "-c",
        "echo 'Cluster is ready!' && cqlsh cassandra1 -e 'SELECT * FROM system.peers;'",
      ]

  # The main application
  app:
    container_name: mapleapps_backend
    stdin_open: true
    environment:
      ### Common
      BACKEND_APP_DATA_DIRECTORY: ${BACKEND_APP_DATA_DIRECTORY}
      BACKEND_IP: 0.0.0.0
      BACKEND_PORT: 8000
      BACKEND_APP_ADMINISTRATION_HMAC_SECRET: ${BACKEND_APP_ADMINISTRATION_HMAC_SECRET}
      BACKEND_APP_ADMINISTRATION_SECRET_KEY: ${BACKEND_APP_ADMINISTRATION_SECRET_KEY}
      BACKEND_APP_GEOLITE_DB_PATH: ${BACKEND_APP_GEOLITE_DB_PATH}
      BACKEND_APP_BANNED_COUNTRIES: ${BACKEND_APP_BANNED_COUNTRIES}
      BACKEND_APP_BETA_ACCESS_CODE: ${BACKEND_APP_BETA_ACCESS_CODE}
      BACKEND_DB_HOSTS: "cassandra1,cassandra2,cassandra3"
      BACKEND_DB_KEYSPACE: "mapleapps"
      BACKEND_DB_CONSISTENCY: "quorum"
      BACKEND_DB_USERNAME: ""
      BACKEND_DB_PASSWORD: ""
      BACKEND_MIGRATIONS_PATH: "file://migrations"
      BACKEND_DB_CONNECT_TIMEOUT: 30s
      BACKEND_DB_REQUEST_TIMEOUT: 15s
      CASSANDRA_REPLICATION_FACTOR: 3
      CASSANDRA_MAX_RETRY_ATTEMPTS: 30 # More retries for cluster
      CASSANDRA_RETRY_DELAY: 10s # Longer delay for cluster
      BACKEND_CACHE_URI: ${BACKEND_CACHE_URI}
      BACKEND_AWS_ACCESS_KEY: ${BACKEND_AWS_ACCESS_KEY}
      BACKEND_AWS_SECRET_KEY: ${BACKEND_AWS_SECRET_KEY}
      BACKEND_AWS_ENDPOINT: ${BACKEND_AWS_ENDPOINT}
      BACKEND_AWS_REGION: ${BACKEND_AWS_REGION}
      BACKEND_AWS_BUCKET_NAME: ${BACKEND_AWS_BUCKET_NAME}

      ### MapleFile
      BACKEND_MAPLEFILE_MAILGUN_API_KEY: ${BACKEND_MAPLEFILE_MAILGUN_API_KEY}
      BACKEND_MAPLEFILE_MAILGUN_DOMAIN: ${BACKEND_MAPLEFILE_MAILGUN_DOMAIN}
      BACKEND_MAPLEFILE_MAILGUN_API_BASE: ${BACKEND_MAPLEFILE_MAILGUN_API_BASE}
      BACKEND_MAPLEFILE_MAILGUN_SENDER_EMAIL: ${BACKEND_MAPLEFILE_MAILGUN_SENDER_EMAIL}
      BACKEND_MAPLEFILE_MAILGUN_MAINTENANCE_EMAIL: ${BACKEND_MAPLEFILE_MAILGUN_MAINTENANCE_EMAIL}
      BACKEND_MAPLEFILE_MAILGUN_FRONTEND_DOMAIN: ${BACKEND_MAPLEFILE_MAILGUN_FRONTEND_DOMAIN}
      BACKEND_MAPLEFILE_MAILGUN_BACKEND_DOMAIN: ${BACKEND_MAPLEFILE_MAILGUN_BACKEND_DOMAIN}

      ### PaperCloud
      BACKEND_PAPERCLOUD_MAILGUN_API_KEY: ${BACKEND_PAPERCLOUD_MAILGUN_API_KEY}
      BACKEND_PAPERCLOUD_MAILGUN_DOMAIN: ${BACKEND_PAPERCLOUD_MAILGUN_DOMAIN}
      BACKEND_PAPERCLOUD_MAILGUN_API_BASE: ${BACKEND_PAPERCLOUD_MAILGUN_API_BASE}
      BACKEND_PAPERCLOUD_MAILGUN_SENDER_EMAIL: ${BACKEND_PAPERCLOUD_MAILGUN_SENDER_EMAIL}
      BACKEND_PAPERCLOUD_MAILGUN_MAINTENANCE_EMAIL: ${BACKEND_PAPERCLOUD_MAILGUN_MAINTENANCE_EMAIL}
      BACKEND_PAPERCLOUD_MAILGUN_FRONTEND_DOMAIN: ${BACKEND_PAPERCLOUD_MAILGUN_FRONTEND_DOMAIN}
      BACKEND_PAPERCLOUD_MAILGUN_BACKEND_DOMAIN: ${BACKEND_PAPERCLOUD_MAILGUN_BACKEND_DOMAIN}

    build:
      context: .
      dockerfile: ./dev.Dockerfile
    restart: unless-stopped
    ports:
      - "8000:8000"
    depends_on:
      wait-for-cluster:
        condition: service_completed_successfully
    volumes:
      - ./:/go/src/github.com/mapleapps-ca/monorepo/cloud/mapleapps-backend

volumes:
  cassandra_node1_data:
  cassandra_node2_data:
  cassandra_node3_data:
