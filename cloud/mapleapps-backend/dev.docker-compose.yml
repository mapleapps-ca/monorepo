#############
# HOW TO USE:
#############
# 3-node Cassandra cluster for development (simplified and working)

version: "3.8"
services:
  cassandra1:
    image: cassandra:4.1
    container_name: mapleapps_cassandra_node1
    restart: unless-stopped
    volumes:
      - cassandra_node1_data:/var/lib/cassandra
    ports:
      - "9042:9042"
    environment:
      - CASSANDRA_SEEDS=cassandra1,cassandra2,cassandra3
      - CASSANDRA_CLUSTER_NAME=mapleapps_cluster
      - CASSANDRA_DC=datacenter1
    networks:
      - cassandra_network

  cassandra2:
    image: cassandra:4.1
    container_name: mapleapps_cassandra_node2
    restart: unless-stopped
    volumes:
      - cassandra_node2_data:/var/lib/cassandra
    ports:
      - "9043:9042"
    environment:
      - CASSANDRA_SEEDS=cassandra1,cassandra2,cassandra3
      - CASSANDRA_CLUSTER_NAME=mapleapps_cluster
      - CASSANDRA_DC=datacenter1
    depends_on:
      - cassandra1
    networks:
      - cassandra_network

  cassandra3:
    image: cassandra:4.1
    container_name: mapleapps_cassandra_node3
    restart: unless-stopped
    volumes:
      - cassandra_node3_data:/var/lib/cassandra
    ports:
      - "9044:9042"
    environment:
      - CASSANDRA_SEEDS=cassandra1,cassandra2,cassandra3
      - CASSANDRA_CLUSTER_NAME=mapleapps_cluster
      - CASSANDRA_DC=datacenter1
    depends_on:
      - cassandra1
      - cassandra2
    networks:
      - cassandra_network

  cache:
    container_name: mapleapps_cache
    image: redis:alpine
    command: "redis-server --save 60 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81 --protected-mode yes"
    ports:
      - 6379:6379
    restart: unless-stopped
    volumes:
      - "./data/redis:/data"
    networks:
      - cassandra_network

  # Simple wait service - just sleep to let cluster form
  wait-for-cluster:
    image: cassandra:4.1
    depends_on:
      - cassandra1
      - cassandra2
      - cassandra3
      - cache
    command:
      - "bash"
      - "-c"
      - |
        echo "Waiting for Cassandra cluster to form..."
        sleep 30
        echo "Cluster should be ready now!"
    networks:
      - cassandra_network

  app:
    container_name: mapleapps_backend
    stdin_open: true
    environment:
      BACKEND_APP_DATA_DIRECTORY: ${BACKEND_APP_DATA_DIRECTORY}
      BACKEND_IP: 0.0.0.0
      BACKEND_PORT: 8000
      BACKEND_APP_ADMINISTRATION_HMAC_SECRET: ${BACKEND_APP_ADMINISTRATION_HMAC_SECRET}
      BACKEND_APP_ADMINISTRATION_SECRET_KEY: ${BACKEND_APP_ADMINISTRATION_SECRET_KEY}
      BACKEND_APP_GEOLITE_DB_PATH: ${BACKEND_APP_GEOLITE_DB_PATH}
      BACKEND_APP_BANNED_COUNTRIES: ${BACKEND_APP_BANNED_COUNTRIES}
      BACKEND_APP_BETA_ACCESS_CODE: ${BACKEND_APP_BETA_ACCESS_CODE}
      BACKEND_DB_HOSTS: "cassandra1,cassandra2,cassandra3"
      BACKEND_DB_KEYSPACE: "mapleapps"
      BACKEND_DB_CONSISTENCY: "quorum"
      BACKEND_DB_USERNAME: ""
      BACKEND_DB_PASSWORD: ""
      BACKEND_MIGRATIONS_PATH: "file://migrations"
      BACKEND_DB_CONNECT_TIMEOUT: 60s
      BACKEND_DB_REQUEST_TIMEOUT: 30s
      BACKEND_DB_REPLICATION_FACTOR: 3
      BACKEND_DB_MAX_RETRY_ATTEMPTS: 50
      BACKEND_DB_RETRY_DELAY: 15s
      BACKEND_CACHE_URI: ${BACKEND_CACHE_URI}
      BACKEND_AWS_ACCESS_KEY: ${BACKEND_AWS_ACCESS_KEY}
      BACKEND_AWS_SECRET_KEY: ${BACKEND_AWS_SECRET_KEY}
      BACKEND_AWS_ENDPOINT: ${BACKEND_AWS_ENDPOINT}
      BACKEND_AWS_REGION: ${BACKEND_AWS_REGION}
      BACKEND_AWS_BUCKET_NAME: ${BACKEND_AWS_BUCKET_NAME}
      BACKEND_MAPLEFILE_MAILGUN_API_KEY: ${BACKEND_MAPLEFILE_MAILGUN_API_KEY}
      BACKEND_MAPLEFILE_MAILGUN_DOMAIN: ${BACKEND_MAPLEFILE_MAILGUN_DOMAIN}
      BACKEND_MAPLEFILE_MAILGUN_API_BASE: ${BACKEND_MAPLEFILE_MAILGUN_API_BASE}
      BACKEND_MAPLEFILE_MAILGUN_SENDER_EMAIL: ${BACKEND_MAPLEFILE_MAILGUN_SENDER_EMAIL}
      BACKEND_MAPLEFILE_MAILGUN_MAINTENANCE_EMAIL: ${BACKEND_MAPLEFILE_MAILGUN_MAINTENANCE_EMAIL}
      BACKEND_MAPLEFILE_MAILGUN_FRONTEND_DOMAIN: ${BACKEND_MAPLEFILE_MAILGUN_FRONTEND_DOMAIN}
      BACKEND_MAPLEFILE_MAILGUN_BACKEND_DOMAIN: ${BACKEND_MAPLEFILE_MAILGUN_BACKEND_DOMAIN}
      BACKEND_PAPERCLOUD_MAILGUN_API_KEY: ${BACKEND_PAPERCLOUD_MAILGUN_API_KEY}
      BACKEND_PAPERCLOUD_MAILGUN_DOMAIN: ${BACKEND_PAPERCLOUD_MAILGUN_DOMAIN}
      BACKEND_PAPERCLOUD_MAILGUN_API_BASE: ${BACKEND_PAPERCLOUD_MAILGUN_API_BASE}
      BACKEND_PAPERCLOUD_MAILGUN_SENDER_EMAIL: ${BACKEND_PAPERCLOUD_MAILGUN_SENDER_EMAIL}
      BACKEND_PAPERCLOUD_MAILGUN_MAINTENANCE_EMAIL: ${BACKEND_PAPERCLOUD_MAILGUN_MAINTENANCE_EMAIL}
      BACKEND_PAPERCLOUD_MAILGUN_FRONTEND_DOMAIN: ${BACKEND_PAPERCLOUD_MAILGUN_FRONTEND_DOMAIN}
      BACKEND_PAPERCLOUD_MAILGUN_BACKEND_DOMAIN: ${BACKEND_PAPERCLOUD_MAILGUN_BACKEND_DOMAIN}
    build:
      context: .
      dockerfile: ./dev.Dockerfile
    restart: unless-stopped
    ports:
      - "8000:8000"
    depends_on:
      wait-for-cluster:
        condition: service_completed_successfully
    volumes:
      - ./:/go/src/github.com/mapleapps-ca/monorepo/cloud/mapleapps-backend
    networks:
      - cassandra_network

volumes:
  cassandra_node1_data:
  cassandra_node2_data:
  cassandra_node3_data:

networks:
  cassandra_network:
    driver: bridge
