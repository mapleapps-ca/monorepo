# docker-compose.prod.yml
# Production Docker Compose configuration
version: "3.8"

services:
  app:
    image: registry.digitalocean.com/ssp/mapleapps_backend:prod
    container_name: mapleapps_backend_prod
    restart: unless-stopped
    environment:
      # Application Configuration
      BACKEND_APP_DATA_DIRECTORY: ${BACKEND_APP_DATA_DIRECTORY}
      BACKEND_IP: 0.0.0.0
      BACKEND_PORT: 8000
      BACKEND_APP_ADMINISTRATION_HMAC_SECRET: ${BACKEND_APP_ADMINISTRATION_HMAC_SECRET}
      BACKEND_APP_ADMINISTRATION_SECRET_KEY: ${BACKEND_APP_ADMINISTRATION_SECRET_KEY}
      BACKEND_APP_GEOLITE_DB_PATH: ${BACKEND_APP_GEOLITE_DB_PATH}
      BACKEND_APP_BANNED_COUNTRIES: ${BACKEND_APP_BANNED_COUNTRIES}
      BACKEND_APP_BETA_ACCESS_CODE: ${BACKEND_APP_BETA_ACCESS_CODE}
      ENVIRONMENT: production
      SERVICE_VERSION: ${SERVICE_VERSION:-1.0.0}

      # Database Configuration - External managed Cassandra
      BACKEND_DB_HOSTS: ${BACKEND_DB_HOSTS}
      BACKEND_DB_KEYSPACE: ${BACKEND_DB_KEYSPACE}
      BACKEND_DB_CONSISTENCY: ${BACKEND_DB_CONSISTENCY}
      BACKEND_DB_USERNAME: ${BACKEND_DB_USERNAME}
      BACKEND_DB_PASSWORD: ${BACKEND_DB_PASSWORD}
      BACKEND_MIGRATIONS_PATH: "file://migrations"
      BACKEND_DB_CONNECT_TIMEOUT: ${BACKEND_DB_CONNECT_TIMEOUT:-60s}
      BACKEND_DB_REQUEST_TIMEOUT: ${BACKEND_DB_REQUEST_TIMEOUT:-30s}
      BACKEND_DB_REPLICATION_FACTOR: ${BACKEND_DB_REPLICATION_FACTOR:-3}
      BACKEND_DB_MAX_RETRY_ATTEMPTS: ${BACKEND_DB_MAX_RETRY_ATTEMPTS:-10}
      BACKEND_DB_RETRY_DELAY: ${BACKEND_DB_RETRY_DELAY:-5s}

      # Cache Configuration - External managed Redis
      BACKEND_CACHE_URI: ${BACKEND_CACHE_URI}

      # AWS Configuration
      BACKEND_AWS_ACCESS_KEY: ${BACKEND_AWS_ACCESS_KEY}
      BACKEND_AWS_SECRET_KEY: ${BACKEND_AWS_SECRET_KEY}
      BACKEND_AWS_ENDPOINT: ${BACKEND_AWS_ENDPOINT}
      BACKEND_AWS_REGION: ${BACKEND_AWS_REGION}
      BACKEND_AWS_BUCKET_NAME: ${BACKEND_AWS_BUCKET_NAME}

      # Production Logging Configuration
      LOG_LEVEL: ${LOG_LEVEL:-info}
      LOG_FORMAT: json
      LOG_ENABLE_STACKTRACE: "false"
      LOG_ENABLE_CALLER: "true"

      # Production Observability Configuration
      BACKEND_OBSERVABILITY_ENABLED: "true"
      BACKEND_OBSERVABILITY_PORT: "8080"
      BACKEND_HEALTH_CHECK_TIMEOUT: "10s"
      BACKEND_METRICS_ENABLED: "true"
      BACKEND_HEALTH_CHECKS_ENABLED: "true"
      BACKEND_DETAILED_HEALTH_CHECKS: "false"

      # MapleFile Mailgun Configuration
      BACKEND_MAPLEFILE_MAILGUN_API_KEY: ${BACKEND_MAPLEFILE_MAILGUN_API_KEY}
      BACKEND_MAPLEFILE_MAILGUN_DOMAIN: ${BACKEND_MAPLEFILE_MAILGUN_DOMAIN}
      BACKEND_MAPLEFILE_MAILGUN_API_BASE: ${BACKEND_MAPLEFILE_MAILGUN_API_BASE}
      BACKEND_MAPLEFILE_MAILGUN_SENDER_EMAIL: ${BACKEND_MAPLEFILE_MAILGUN_SENDER_EMAIL}
      BACKEND_MAPLEFILE_MAILGUN_MAINTENANCE_EMAIL: ${BACKEND_MAPLEFILE_MAILGUN_MAINTENANCE_EMAIL}
      BACKEND_MAPLEFILE_MAILGUN_FRONTEND_DOMAIN: ${BACKEND_MAPLEFILE_MAILGUN_FRONTEND_DOMAIN}
      BACKEND_MAPLEFILE_MAILGUN_BACKEND_DOMAIN: ${BACKEND_MAPLEFILE_MAILGUN_BACKEND_DOMAIN}

      # PaperCloud Mailgun Configuration
      BACKEND_PAPERCLOUD_MAILGUN_API_KEY: ${BACKEND_PAPERCLOUD_MAILGUN_API_KEY}
      BACKEND_PAPERCLOUD_MAILGUN_DOMAIN: ${BACKEND_PAPERCLOUD_MAILGUN_DOMAIN}
      BACKEND_PAPERCLOUD_MAILGUN_API_BASE: ${BACKEND_PAPERCLOUD_MAILGUN_API_BASE}
      BACKEND_PAPERCLOUD_MAILGUN_SENDER_EMAIL: ${BACKEND_PAPERCLOUD_MAILGUN_SENDER_EMAIL}
      BACKEND_PAPERCLOUD_MAILGUN_MAINTENANCE_EMAIL: ${BACKEND_PAPERCLOUD_MAILGUN_MAINTENANCE_EMAIL}
      BACKEND_PAPERCLOUD_MAILGUN_FRONTEND_DOMAIN: ${BACKEND_PAPERCLOUD_MAILGUN_FRONTEND_DOMAIN}
      BACKEND_PAPERCLOUD_MAILGUN_BACKEND_DOMAIN: ${BACKEND_PAPERCLOUD_MAILGUN_BACKEND_DOMAIN}

    ports:
      - "${APP_PORT:-8000}:8000" # Main application port
      - "${OBSERVABILITY_PORT:-8080}:8080" # Observability port (private/internal)

    # Resource limits for production
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: "0.5"
        reservations:
          memory: 256M
          cpus: "0.25"

    # Health checks for container orchestration
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:8080/health/live",
        ]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 1m

    # Security
    read_only: true
    tmpfs:
      - /tmp
    user: "1000:1000" # Non-root user

    # Logging
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
